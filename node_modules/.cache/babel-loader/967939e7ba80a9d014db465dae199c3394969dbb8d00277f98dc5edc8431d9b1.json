{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nclass Dispatcher {\n  constructor() {\n    this.handlers = [];\n  }\n  listen(handler) {\n    this.handlers.push(handler);\n  }\n  emit(...args) {\n    this.handlers.forEach(handler => {\n      handler(...args);\n    });\n  }\n}\nclass Player {\n  constructor() {\n    this.audioContext = new AudioContext();\n    this.playList = [];\n    this.playIndex = 0;\n    this.emptyNode = {\n      file: null,\n      offset: 0,\n      start: null,\n      source: null,\n      buffer: null\n    };\n    this.onPlay = new Dispatcher();\n    this.onPause = new Dispatcher();\n    this.onChange = new Dispatcher();\n    this.onReady = new Dispatcher();\n  }\n  async readAudioBuffer(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = async evt => {\n        this.audioContext.decodeAudioData(evt.target.result).then(resolve, reject);\n      };\n      reader.onerror = reject;\n      reader.readAsArrayBuffer(file);\n    });\n  }\n  async append(file) {\n    const isEmpty = this.isEmpty;\n    this.playList.push({\n      file,\n      offset: 0,\n      start: null,\n      source: null,\n      buffer: await this.readAudioBuffer(file)\n    });\n    if (isEmpty) {\n      this.onReady.emit(this);\n    }\n  }\n  play() {\n    if (!this.playList.length || this.current.source) {\n      return;\n    }\n    const source = this.audioContext.createBufferSource();\n    source.buffer = this.current.buffer;\n    source.onended = this.next.bind(this);\n    source.connect(this.audioContext.destination);\n    source.start(0, this.current.offset);\n    this.current.source = source;\n    this.current.start = this.audioContext.currentTime;\n    this.onPlay.emit(this);\n  }\n  pause() {\n    if (!this.playList.length || !this.current.source) {\n      return;\n    }\n    this.current.source.stop(0);\n    this.current.source.disconnect(0);\n    this.current.source.onended = null;\n    this.current.source = null;\n    this.current.offset = this.position;\n    this.current.start = null;\n    this.onPause.emit(this);\n  }\n  stop() {\n    this.pause();\n    this.current.offset = 0;\n    this.current.start = null;\n  }\n  next() {\n    this.stop();\n    this.playIndex++;\n    if (this.playIndex >= this.playList.length) {\n      this.playIndex = 0;\n    }\n    this.play();\n    this.onChange.emit(this);\n  }\n  prev() {\n    this.stop();\n    this.playIndex--;\n    if (this.playIndex < 0) {\n      this.playIndex = Math.max(this.playList.length - 1, 0);\n    }\n    this.play();\n    this.onChange.emit(this);\n  }\n  get isEmpty() {\n    return this.current === this.emptyNode;\n  }\n  get current() {\n    return this.playList[this.playIndex] || this.emptyNode;\n  }\n  get position() {\n    if (!this.playList.length) {\n      return 0;\n    }\n    return this.current.offset + (this.current.start !== null ? this.audioContext.currentTime - this.current.start : 0);\n  }\n  set position(val) {\n    if (!this.playList.length) {\n      return;\n    }\n    this.stop();\n    this.current.offset = val;\n    this.current.start = null;\n    this.play();\n  }\n  get duration() {\n    return this.current.buffer ? this.current.buffer.duration : 0.001;\n  }\n}\nexport const player = new Player();","map":{"version":3,"names":["Dispatcher","constructor","handlers","listen","handler","push","emit","args","forEach","Player","audioContext","AudioContext","playList","playIndex","emptyNode","file","offset","start","source","buffer","onPlay","onPause","onChange","onReady","readAudioBuffer","Promise","resolve","reject","reader","FileReader","onload","evt","decodeAudioData","target","result","then","onerror","readAsArrayBuffer","append","isEmpty","play","length","current","createBufferSource","onended","next","bind","connect","destination","currentTime","pause","stop","disconnect","position","prev","Math","max","val","duration","player"],"sources":["/Users/zhupj/yanyunmulan/vue_projs/music/src/player.js"],"sourcesContent":["class Dispatcher {\n  constructor () {\n    this.handlers = []\n  }\n\n  listen (handler) {\n    this.handlers.push(handler)\n  }\n\n  emit (...args) {\n    this.handlers.forEach(handler => {\n      handler(...args)\n    })\n  }\n}\n\nclass Player {\n  constructor () {\n    this.audioContext = new AudioContext()\n    this.playList = []\n    this.playIndex = 0\n\n    this.emptyNode = {\n      file: null,\n      offset: 0,\n      start: null,\n      source: null,\n      buffer: null\n    }\n\n    this.onPlay = new Dispatcher()\n    this.onPause = new Dispatcher()\n    this.onChange = new Dispatcher()\n    this.onReady = new Dispatcher()\n  }\n\n  async readAudioBuffer (file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = async evt => {\n        this.audioContext\n          .decodeAudioData(evt.target.result)\n          .then(resolve, reject)\n      }\n      reader.onerror = reject\n      reader.readAsArrayBuffer(file)\n    })\n  }\n\n  async append (file) {\n    const isEmpty = this.isEmpty\n    this.playList.push({\n      file,\n      offset: 0,\n      start: null,\n      source: null,\n      buffer: await this.readAudioBuffer(file)\n    })\n    if (isEmpty) {\n      this.onReady.emit(this)\n    }\n  }\n\n  play () {\n    if (!this.playList.length || this.current.source) {\n      return\n    }\n    const source = this.audioContext.createBufferSource()\n    source.buffer = this.current.buffer\n    source.onended = this.next.bind(this)\n    source.connect(this.audioContext.destination)\n    source.start(0, this.current.offset)\n    this.current.source = source\n    this.current.start = this.audioContext.currentTime\n\n    this.onPlay.emit(this)\n  }\n\n  pause () {\n    if (!this.playList.length || !this.current.source) {\n      return\n    }\n    this.current.source.stop(0)\n    this.current.source.disconnect(0)\n    this.current.source.onended = null\n    this.current.source = null\n    this.current.offset = this.position\n    this.current.start = null\n\n    this.onPause.emit(this)\n  }\n\n  stop () {\n    this.pause()\n    this.current.offset = 0\n    this.current.start = null\n  }\n\n  next () {\n    this.stop()\n    this.playIndex++\n    if (this.playIndex >= this.playList.length) {\n      this.playIndex = 0\n    }\n    this.play()\n    this.onChange.emit(this)\n  }\n\n  prev () {\n    this.stop()\n    this.playIndex--\n    if (this.playIndex < 0) {\n      this.playIndex = Math.max(this.playList.length - 1, 0)\n    }\n    this.play()\n    this.onChange.emit(this)\n  }\n\n  get isEmpty () {\n    return this.current === this.emptyNode\n  }\n\n  get current () {\n    return this.playList[this.playIndex] || this.emptyNode\n  }\n\n  get position () {\n    if (!this.playList.length) {\n      return 0\n    }\n    return (\n      this.current.offset +\n      (this.current.start !== null\n        ? this.audioContext.currentTime - this.current.start\n        : 0)\n    )\n  }\n\n  set position (val) {\n    if (!this.playList.length) {\n      return\n    }\n    this.stop()\n    this.current.offset = val\n    this.current.start = null\n    this.play()\n  }\n\n  get duration () {\n    return this.current.buffer ? this.current.buffer.duration : 0.001\n  }\n}\n\nexport const player = new Player()\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}